# File: .github/workflows/build-and-push.yml
# Purpose: Defines the CI/CD pipeline for building and pushing Docker images.

# The name of our workflow, which will be displayed on the GitHub Actions tab.
name: Build and Push Docker Images

# 'on' defines the events that will trigger this workflow to run.
on:
  # Run on every push to the 'main' branch.
  push:
    branches: [ "main" ]
  # 'workflow_dispatch' adds a button to the GitHub Actions UI, allowing
  # us to run this workflow manually, which is great for testing.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that run in parallel.
jobs:
  # We define a single job named 'build-and-push'.
  build-and-push:
    # 'runs-on' specifies the type of virtual machine to run the job on.
    # 'ubuntu-latest' is a standard, reliable choice.
    runs-on: ubuntu-latest

    # 'steps' are a sequence of tasks that will be executed as part of the job.
    steps:
      # Step 1: Check out our repository code so the workflow can access it.
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub.
      # This action securely logs in using the secrets we configured.
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 3: Build and push the Telemetry Service image.
      - name: Build and push Telemetry Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/telemetry-service
          # The 'push' flag tells the action to push the image after building.
          push: true
          # 'tags' defines the name and tag for the Docker image.
          # We use our Docker Hub username (from secrets) to tag it correctly.
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/odyssey-telemetry-service:latest

      # Step 4: Build and push the Command & Control Service image.
      - name: Build and push C2 Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/command-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/odyssey-command-service:latest

      # Step 5: Build and push the Persistence Service image.
      - name: Build and push Persistence Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/persistence-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/odyssey-persistence-service:latest

      # Step 6: Build and push the Drone Simulator image.
      - name: Build and push Drone Simulator
        uses: docker/build-push-action@v4
        with:
          context: ./simulators/drone
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/odyssey-drone-simulator:latest