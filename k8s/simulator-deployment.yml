# File: k8s/simulator-deployment.yml
# Purpose: Defines the Deployment for the Drone Simulator.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: simulator-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simulator
  template:
    metadata:
      labels:
        app: simulator
    spec:
      initContainers:
        - name: wait-for-c2
          # A tiny utility image that has network tools like 'sh' and 'nc'
          image: busybox:1.28 
          # This is the command the init container will run. It's a simple shell
          # script that tries to connect to 'c2-service' on port 8081. The loop
          # continues until the 'nc' (netcat) command succeeds.
          command: ['sh', '-c', 'until nc -z c2-service 8081; do echo "waiting for c2-service..."; sleep 2; done;']
      containers:
        - name: simulator-container
          image: odyssey/drone-simulator:1.0.0
          imagePullPolicy: Never
          # We use environment variables to tell the simulator how to find the
          # other services using their Kubernetes Service names. This is the magic
          # of Kubernetes DNS. The pod will resolve 'telemetry-service' to the
          # correct internal cluster IP.
          env:
            - name: TELEMETRY_ENDPOINT
              value: "http://telemetry-service:8080/telemetry"
            - name: C2_ADDRESS
              value: "http://c2-service:8081"
            # Since each Pod gets its own IP, the simulator can register that
            # unique IP. Kubernetes provides this through a special 'fieldRef'.
            - name: SIMULATOR_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            # This is required to make Python logging show up in 'kubectl logs'
            - name: PYTHONUNBUFFERED
              value: "1"